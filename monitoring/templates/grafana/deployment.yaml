{{- if .Values.grafana.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "monitoring.grafana.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.grafana.replicaCount }}
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
        {{- include "monitoring.grafana.labels" . | nindent 8 }}
    spec:
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        fsGroup: 472
        runAsUser: 472
      containers:
      - name: grafana
        image: "{{ .Values.grafana.image.repository }}:{{ .Values.grafana.image.tag }}"
        imagePullPolicy: {{ .Values.grafana.image.pullPolicy }}
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        env:
        - name: GF_SECURITY_ADMIN_USER
          value: {{ .Values.grafana.admin.user }}
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: {{ .Values.grafana.admin.password }}
        - name: GF_PATHS_PROVISIONING
          value: /etc/grafana/provisioning
        - name: GF_INSTALL_PLUGINS
          value: ""
        volumeMounts:
        - name: storage
          mountPath: /var/lib/grafana
        - name: datasources
          mountPath: /etc/grafana/provisioning/datasources
        - name: dashboards-provider
          mountPath: /etc/grafana/provisioning/dashboards
        - name: dashboards
          mountPath: /var/lib/grafana/dashboards
        resources:
          {{- toYaml .Values.grafana.resources | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: storage
        {{- if .Values.grafana.persistence.enabled }}
        persistentVolumeClaim:
          claimName: grafana-storage
        {{- else }}
        emptyDir: {}
        {{- end }}
      - name: datasources
        configMap:
          name: grafana-datasources
      - name: dashboards-provider
        configMap:
          name: grafana-dashboards-provider
      - name: dashboards
        configMap:
          name: grafana-dashboards
{{- end }}
